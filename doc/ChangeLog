Version 0.5.0.1
===============
+ fixed reg. allocator bug (all platforms)
+ i386: fixed fret/fretval bug
+ AMD64: fixed fp-argument passing bug 
+ i386+AMD64: allowed longer jumps

Version 0.5.0.0
===============
+ AMD64: support for floating-point arithmetics
+ jit_prepare() no longer requires its argument
+ i386: optimized handling of single precision floating-point values 
+ new register numbering scheme
+ jit_print_ops() allows more verbose output
+ fixed memory leaks

Version 0.4.0.0
===============
+ macros JIT_FP, JIT_RETREG, JIT_IMMREG have been removed
+ PUSHARG have been replaced with PUTARG along with the argument passing order
+ new operation DECLARE_ARG and new semantics of GETARG 
+ register count detection
+ infrastructure for floating-point arithmetics (registers, etc.)
+ experimental support for FP arithmetics (requires i386-based processor with
SSE2)

Version 0.3.2.0
===============
+ AMD64, i386: MUL, DIV, MOD, LSH, and RSH use push & pop only if necessary
+ SPARC: optimized MUL, DIV, and MOD for some immediate values
+ SPARC: call operation does not use the temporary register, i.e., it's 10%
faster
+ SPARC: fixed stack corruption and the appropriate test-case is included
+ changing of large immediate values into a MOV and register-based operations
became part of the jitlib-core
+ fixed jit_print_ops()
+ new operation MSG
+ jit_print_ops() and jit_dump have renamed to jit_dump_ops() and
jit_dump_code()
+ registers JIT_FP and JIT_RETREG have new aliases R_FP and R_OUT,
respectively

Version 0.3.1.0
===============
+ support for SPARC

Version 0.3.0.0
===============
+ support for an unlimited number of registers
+ automatic buffer size adjustment, i.e., it is not necessary set the size of
the output buffer in advance
+ particular parts of x86 and AMD64 code has been merged
+ configurable register allocator which can shared by multiple processor types
+ red-black trees are used to implement register mappings and sets
+ API changes
	+ jit_init has only one argument
	+ jit_call has the same meaning as the jit_finish (jit_finish was
	removed)

Version 0.2.5.0
================
+ support for AMD64 (x86_64) processors
+ CPU detection

Version 0.2.4.2
===============
+ initial release
+ only x86 based processors are supported
